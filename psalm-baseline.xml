<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="5.20.0@3f284e96c9d9be6fe6b15c79416e1d1903dcfef4">
  <file src="src/Helper/AbstractHtmlElement.php">
    <MissingConstructor>
      <code>$closingBracket</code>
      <code>$closingBracket</code>
      <code>$closingBracket</code>
      <code>$closingBracket</code>
      <code>$closingBracket</code>
      <code>$closingBracket</code>
      <code>$closingBracket</code>
      <code>$closingBracket</code>
      <code>$closingBracket</code>
      <code>$closingBracket</code>
    </MissingConstructor>
    <MixedArgument>
      <code>$val</code>
    </MixedArgument>
    <MixedAssignment>
      <code>$val</code>
    </MixedAssignment>
    <PossiblyInvalidArgument>
      <code>$attribs</code>
    </PossiblyInvalidArgument>
    <PossiblyNullReference>
      <code>plugin</code>
      <code>plugin</code>
    </PossiblyNullReference>
    <RedundantCastGivenDocblockType>
      <code>(array) $attribs</code>
    </RedundantCastGivenDocblockType>
    <UndefinedInterfaceMethod>
      <code>plugin</code>
      <code>plugin</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="src/Helper/Cycle.php">
    <ImplementedReturnTypeMismatch>
      <code>Cycle</code>
      <code>Cycle</code>
    </ImplementedReturnTypeMismatch>
    <MissingTemplateParam>
      <code>Iterator</code>
    </MissingTemplateParam>
    <MixedArgument>
      <code><![CDATA[$this->data[$this->name]]]></code>
      <code><![CDATA[$this->data[$this->name]]]></code>
    </MixedArgument>
    <MixedArrayAccess>
      <code><![CDATA[$this->data[$this->name][$this->key()]]]></code>
      <code><![CDATA[$this->data[$this->name][$this->key()]]]></code>
    </MixedArrayAccess>
    <MixedInferredReturnType>
      <code>array</code>
      <code>int</code>
    </MixedInferredReturnType>
    <MixedOperand>
      <code><![CDATA[$this->pointers[$this->name]]]></code>
      <code><![CDATA[$this->pointers[$this->name]]]></code>
    </MixedOperand>
    <MixedReturnStatement>
      <code><![CDATA[$this->data[$this->name]]]></code>
      <code><![CDATA[$this->pointers[$this->name]]]></code>
    </MixedReturnStatement>
    <PossiblyUnusedMethod>
      <code>getName</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="src/Helper/DeclareVars.php">
    <MissingConstructor>
      <code>$view</code>
    </MissingConstructor>
    <MixedArgument>
      <code>$key</code>
      <code>$value</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code>$name</code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment>
      <code>$key</code>
      <code>$value</code>
      <code>$vars</code>
    </MixedAssignment>
    <MixedPropertyFetch>
      <code><![CDATA[$vars->$key]]></code>
    </MixedPropertyFetch>
    <NonInvariantDocblockPropertyType>
      <code>$view</code>
    </NonInvariantDocblockPropertyType>
    <PossiblyNullReference>
      <code>vars</code>
      <code>vars</code>
    </PossiblyNullReference>
    <UndefinedInterfaceMethod>
      <code>vars</code>
      <code>vars</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="src/Helper/Doctype.php">
    <DocblockTypeContradiction>
      <code>null === static::$registeredDoctypes</code>
    </DocblockTypeContradiction>
    <MixedArrayAssignment>
      <code><![CDATA[$this->registry['doctypes'][$type]]]></code>
    </MixedArrayAssignment>
    <MixedReturnStatement>
      <code><![CDATA[$doctypes[$this->getDoctype()]]]></code>
    </MixedReturnStatement>
    <MixedReturnTypeCoercion>
      <code><![CDATA[$this->registry['doctype']]]></code>
      <code><![CDATA[$this->registry['doctypes']]]></code>
      <code>array</code>
      <code>string</code>
    </MixedReturnTypeCoercion>
    <PropertyNotSetInConstructor>
      <code>$registry</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Helper/Escaper/AbstractHelper.php">
    <MixedAssignment>
      <code>$v</code>
      <code>$value[$k]</code>
    </MixedAssignment>
  </file>
  <file src="src/Helper/Gravatar.php">
    <DocblockTypeContradiction>
      <code>$flag === null</code>
    </DocblockTypeContradiction>
    <MissingConstructor>
      <code>$attributes</code>
      <code>$email</code>
      <code>$emailIsHashed</code>
    </MissingConstructor>
    <MixedAssignment>
      <code>$value</code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code>bool</code>
      <code>int</code>
      <code>string</code>
      <code>string</code>
    </MixedInferredReturnType>
    <MixedReturnStatement>
      <code><![CDATA[$this->options['default_img']]]></code>
      <code><![CDATA[$this->options['img_size']]]></code>
      <code><![CDATA[$this->options['rating']]]></code>
      <code><![CDATA[$this->options['secure']]]></code>
    </MixedReturnStatement>
    <RedundantCastGivenDocblockType>
      <code>(bool) $flag</code>
      <code>(int) $imgSize</code>
    </RedundantCastGivenDocblockType>
    <RedundantConditionGivenDocblockType>
      <code>(bool) $flag</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/Helper/HeadLink.php">
    <ArgumentTypeCoercion>
      <code>$item</code>
    </ArgumentTypeCoercion>
    <MethodSignatureMustProvideReturnType>
      <code>offsetSet</code>
    </MethodSignatureMustProvideReturnType>
    <MixedArgument>
      <code>$args</code>
      <code>$args</code>
      <code>$args</code>
      <code>$args[0]</code>
      <code>$attributes[$itemKey]</code>
      <code>$href</code>
      <code>$index</code>
      <code><![CDATA[$this->autoEscape ? $this->escapeAttribute($attributes[$itemKey]) : $attributes[$itemKey]]]></code>
      <code><![CDATA[$this->autoEscape ? $this->escapeAttribute($value) : $value]]></code>
      <code>$value</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code><![CDATA[$extras['media']]]></code>
      <code>$media</code>
    </MixedArgumentTypeCoercion>
    <MixedArrayAccess>
      <code>$args[0]</code>
      <code>$args[0]</code>
    </MixedArrayAccess>
    <MixedAssignment>
      <code>$conditionalStylesheet</code>
      <code>$extras</code>
      <code>$extras</code>
      <code>$href</code>
      <code>$href</code>
      <code>$index</code>
      <code>$item</code>
      <code>$media</code>
      <code>$title</code>
      <code>$type</code>
      <code>$value</code>
    </MixedAssignment>
    <PossiblyNullArgument>
      <code>$index</code>
      <code><![CDATA[$this->view]]></code>
    </PossiblyNullArgument>
    <PossiblyUnusedMethod>
      <code>createDataAlternate</code>
      <code>createDataNext</code>
      <code>createDataPrev</code>
      <code>createDataStylesheet</code>
    </PossiblyUnusedMethod>
    <PossiblyUnusedReturnValue>
      <code>AbstractContainer</code>
      <code>AbstractContainer</code>
    </PossiblyUnusedReturnValue>
    <RedundantCast>
      <code>(string) $conditionalStylesheet</code>
    </RedundantCast>
  </file>
  <file src="src/Helper/HeadMeta.php">
    <ArgumentTypeCoercion>
      <code>$item</code>
      <code>$value</code>
      <code>$value</code>
    </ArgumentTypeCoercion>
    <MethodSignatureMustProvideReturnType>
      <code>offsetSet</code>
      <code>offsetUnset</code>
    </MethodSignatureMustProvideReturnType>
    <MixedArgument>
      <code>$args[0]</code>
      <code>$args[1]</code>
      <code>$args[2]</code>
      <code>$index</code>
      <code><![CDATA[$item->$type]]></code>
      <code><![CDATA[$item->content]]></code>
      <code><![CDATA[$item->type]]></code>
      <code>$key</code>
      <code><![CDATA[$this->autoEscape ? $this->escapeAttribute($item->$type) : $item->$type]]></code>
      <code><![CDATA[$this->autoEscape ? $this->escapeAttribute($item->content) : $item->content]]></code>
      <code><![CDATA[$this->autoEscape ? $this->escapeAttribute($value) : $value]]></code>
      <code>$type</code>
      <code>$value</code>
      <code>$value</code>
    </MixedArgument>
    <MixedAssignment>
      <code>$doctype</code>
      <code>$index</code>
      <code>$key</code>
      <code>$type</code>
      <code>$value</code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code>$this</code>
    </MixedInferredReturnType>
    <MixedMethodCall>
      <code>isHtml5</code>
      <code>isHtml5</code>
      <code>isHtml5</code>
      <code>isHtml5</code>
      <code>isRdfa</code>
      <code>isXhtml</code>
    </MixedMethodCall>
    <MixedReturnStatement>
      <code>parent::__call($method, $args)</code>
      <code>parent::__call($method, $args)</code>
    </MixedReturnStatement>
    <ParamNameMismatch>
      <code>$index</code>
      <code>$index</code>
    </ParamNameMismatch>
    <PossiblyNullArgument>
      <code><![CDATA[$this->view]]></code>
    </PossiblyNullArgument>
    <PossiblyNullReference>
      <code>plugin</code>
      <code>plugin</code>
      <code>plugin</code>
    </PossiblyNullReference>
    <PossiblyUnusedReturnValue>
      <code>AbstractContainer</code>
      <code>AbstractContainer</code>
    </PossiblyUnusedReturnValue>
    <UndefinedInterfaceMethod>
      <code>plugin</code>
      <code>plugin</code>
      <code>plugin</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="src/Helper/HeadScript.php">
    <MethodSignatureMustProvideReturnType>
      <code>offsetSet</code>
    </MethodSignatureMustProvideReturnType>
    <MixedArgument>
      <code>$content</code>
      <code>$content</code>
      <code>$index</code>
      <code>$index</code>
      <code><![CDATA[$this->autoEscape ? $this->escapeAttribute($value) : $value]]></code>
      <code>$value</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code>$attrs</code>
      <code>$attrs</code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment>
      <code><![CDATA[$attrs['src']]]></code>
      <code>$content</code>
      <code>$index</code>
      <code>$value</code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code>$this</code>
    </MixedInferredReturnType>
    <MixedMethodCall>
      <code>isHtml5</code>
    </MixedMethodCall>
    <MixedReturnStatement>
      <code>parent::__call($method, $args)</code>
      <code>parent::__call($method, $args)</code>
    </MixedReturnStatement>
    <PossiblyUnusedReturnValue>
      <code>AbstractContainer</code>
      <code>AbstractContainer</code>
    </PossiblyUnusedReturnValue>
    <RedundantCastGivenDocblockType>
      <code>(bool) $flag</code>
    </RedundantCastGivenDocblockType>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[(null !== $spec) && is_string($spec)]]></code>
      <code>is_string($spec)</code>
    </RedundantConditionGivenDocblockType>
    <UndefinedInterfaceMethod>
      <code>plugin</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="src/Helper/HeadStyle.php">
    <DocblockTypeContradiction>
      <code><![CDATA[! is_string($item->content)]]></code>
      <code><![CDATA[! isset($item->content)]]></code>
      <code><![CDATA[! isset($item->content) || ! is_string($item->content)]]></code>
    </DocblockTypeContradiction>
    <MethodSignatureMustProvideReturnType>
      <code>offsetSet</code>
    </MethodSignatureMustProvideReturnType>
    <MismatchingDocblockParamType>
      <code>ObjectShape</code>
    </MismatchingDocblockParamType>
    <MixedArgument>
      <code>$content</code>
      <code>$index</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code>$attrs</code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment>
      <code>$content</code>
      <code>$index</code>
    </MixedAssignment>
    <PossiblyUnusedReturnValue>
      <code>AbstractContainer</code>
      <code>AbstractContainer</code>
    </PossiblyUnusedReturnValue>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[(null !== $content) && is_string($content)]]></code>
      <code>is_string($content)</code>
    </RedundantConditionGivenDocblockType>
    <UnusedParam>
      <code>$indent</code>
    </UnusedParam>
  </file>
  <file src="src/Helper/HelperInterface.php">
    <PossiblyUnusedReturnValue>
      <code>HelperInterface</code>
    </PossiblyUnusedReturnValue>
  </file>
  <file src="src/Helper/HtmlObject.php">
    <MixedArgument>
      <code>$options</code>
    </MixedArgument>
    <MixedAssignment>
      <code>$options</code>
    </MixedAssignment>
    <RiskyTruthyFalsyComparison>
      <code>$content</code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="src/Helper/HtmlPage.php">
    <MixedAssignment>
      <code>$htmlObject</code>
    </MixedAssignment>
    <MixedFunctionCall>
      <code>$htmlObject($data, self::TYPE, $attribs, $params, $content)</code>
    </MixedFunctionCall>
    <MixedInferredReturnType>
      <code>string</code>
    </MixedInferredReturnType>
    <MixedReturnStatement>
      <code>$htmlObject($data, self::TYPE, $attribs, $params, $content)</code>
    </MixedReturnStatement>
    <PossiblyNullReference>
      <code>plugin</code>
    </PossiblyNullReference>
    <UndefinedInterfaceMethod>
      <code>plugin</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="src/Helper/HtmlTag.php">
    <MixedArgument>
      <code>$value</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code>$name</code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment>
      <code>$value</code>
    </MixedAssignment>
    <PossiblyNullArgument>
      <code><![CDATA[$this->view]]></code>
    </PossiblyNullArgument>
    <RedundantCastGivenDocblockType>
      <code>(bool) $useNamespaces</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="src/Helper/Layout.php">
    <PossiblyNullReference>
      <code>plugin</code>
    </PossiblyNullReference>
    <PossiblyUnusedMethod>
      <code>__construct</code>
    </PossiblyUnusedMethod>
    <RedundantCastGivenDocblockType>
      <code>(string) $template</code>
    </RedundantCastGivenDocblockType>
    <UndefinedInterfaceMethod>
      <code>plugin</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="src/Helper/Navigation.php">
    <InvalidFunctionCall>
      <code>call_user_func_array($helper, $arguments)</code>
    </InvalidFunctionCall>
    <InvalidThrow>
      <code>ExceptionInterface</code>
    </InvalidThrow>
    <MoreSpecificImplementedParamType>
      <code>$container</code>
    </MoreSpecificImplementedParamType>
    <RedundantCastGivenDocblockType>
      <code>(bool) $injectAcl</code>
      <code>(bool) $injectContainer</code>
      <code>(bool) $injectTranslator</code>
      <code>(string) $proxy</code>
    </RedundantCastGivenDocblockType>
    <RedundantCondition>
      <code>$view</code>
    </RedundantCondition>
    <UndefinedInterfaceMethod>
      <code>hasTranslator</code>
      <code>setTranslator</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="src/Helper/Navigation/AbstractHelper.php">
    <DocblockTypeContradiction>
      <code><![CDATA[! is_int($this->minDepth)]]></code>
      <code>! is_string($message)</code>
      <code>$container instanceof AbstractContainer</code>
      <code><![CDATA[null === $this->container]]></code>
    </DocblockTypeContradiction>
    <ImplementedReturnTypeMismatch>
      <code>AbstractHelper</code>
      <code>null|EventManagerInterface</code>
    </ImplementedReturnTypeMismatch>
    <InvalidThrow>
      <code>Navigation\Exception\ExceptionInterface</code>
    </InvalidThrow>
    <MissingConstructor>
      <code>$container</code>
      <code>$container</code>
      <code>$container</code>
      <code>$container</code>
      <code>$container</code>
      <code>$events</code>
      <code>$events</code>
      <code>$events</code>
      <code>$events</code>
      <code>$events</code>
      <code>$maxDepth</code>
      <code>$maxDepth</code>
      <code>$maxDepth</code>
      <code>$maxDepth</code>
      <code>$maxDepth</code>
      <code>$minDepth</code>
      <code>$minDepth</code>
      <code>$minDepth</code>
      <code>$minDepth</code>
    </MissingConstructor>
    <MixedArgument>
      <code><![CDATA[$page->getTextDomain()]]></code>
      <code><![CDATA[$page->getTextDomain()]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code>$container</code>
      <code>$container</code>
      <code>$label</code>
      <code>$value</code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code>bool</code>
    </MixedInferredReturnType>
    <MixedOperand>
      <code>$label</code>
    </MixedOperand>
    <MixedReturnStatement>
      <code><![CDATA[$results->last()]]></code>
    </MixedReturnStatement>
    <ParamNameMismatch>
      <code>$events</code>
    </ParamNameMismatch>
    <PossiblyFalseArgument>
      <code><![CDATA[strrpos($prefix, '\\')]]></code>
    </PossiblyFalseArgument>
    <PossiblyNullArgument>
      <code><![CDATA[$page->getTitle()]]></code>
    </PossiblyNullArgument>
    <PossiblyNullPropertyAssignmentValue>
      <code>$maxDepth</code>
      <code>$minDepth</code>
    </PossiblyNullPropertyAssignmentValue>
    <PossiblyNullReference>
      <code>attach</code>
      <code>getParent</code>
      <code>plugin</code>
    </PossiblyNullReference>
    <RedundantCastGivenDocblockType>
      <code>(bool) $renderInvisible</code>
      <code>(bool) $useAcl</code>
      <code>(string) $indent</code>
    </RedundantCastGivenDocblockType>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[$this->acl === null && static::$defaultAcl !== null]]></code>
      <code><![CDATA[null !== $this->container]]></code>
      <code>static::$defaultAcl !== null</code>
    </RedundantConditionGivenDocblockType>
    <ReferenceConstraintViolation>
      <code>return;</code>
    </ReferenceConstraintViolation>
    <UndefinedInterfaceMethod>
      <code>plugin</code>
    </UndefinedInterfaceMethod>
    <UndefinedMethod>
      <code>setSharedManager</code>
    </UndefinedMethod>
    <UnevaluatedCode>
      <code><![CDATA[return '';]]></code>
    </UnevaluatedCode>
  </file>
  <file src="src/Helper/Navigation/Breadcrumbs.php">
    <DocblockTypeContradiction>
      <code>null === $partial</code>
    </DocblockTypeContradiction>
    <InvalidReturnStatement>
      <code><![CDATA[$this->renderPartialModel($params, $container, $partial)]]></code>
      <code><![CDATA[$this->renderPartialModel([], $container, $partial)]]></code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code>string</code>
      <code>string</code>
    </InvalidReturnType>
    <MissingConstructor>
      <code>$partial</code>
    </MissingConstructor>
    <MixedArgument>
      <code>$active</code>
      <code><![CDATA[$active->getLabel()]]></code>
      <code><![CDATA[$active->getTextDomain()]]></code>
      <code><![CDATA[$model['pages']]]></code>
      <code>$partial[0]</code>
    </MixedArgument>
    <MixedArrayAssignment>
      <code><![CDATA[$model['pages'][]]]></code>
      <code><![CDATA[$model['pages'][]]]></code>
    </MixedArrayAssignment>
    <MixedAssignment>
      <code>$active</code>
      <code>$active</code>
      <code>$active</code>
      <code>$label</code>
      <code><![CDATA[$model['pages'][]]]></code>
      <code>$parent</code>
    </MixedAssignment>
    <MixedMethodCall>
      <code>getLabel</code>
      <code>getParent</code>
      <code>getParent</code>
      <code>getTextDomain</code>
    </MixedMethodCall>
    <MixedOperand>
      <code>$label</code>
    </MixedOperand>
    <MoreSpecificImplementedParamType>
      <code>$container</code>
    </MoreSpecificImplementedParamType>
    <PossiblyNullPropertyAssignmentValue>
      <code>$partial</code>
    </PossiblyNullPropertyAssignmentValue>
    <PossiblyNullReference>
      <code>plugin</code>
      <code>plugin</code>
    </PossiblyNullReference>
    <RedundantCastGivenDocblockType>
      <code>(bool) $linkLast</code>
    </RedundantCastGivenDocblockType>
    <RedundantConditionGivenDocblockType>
      <code>is_array($partial)</code>
      <code>is_string($separator)</code>
    </RedundantConditionGivenDocblockType>
    <TypeDoesNotContainNull>
      <code>null === $container</code>
      <code>null === $container</code>
    </TypeDoesNotContainNull>
    <UndefinedInterfaceMethod>
      <code>plugin</code>
      <code>plugin</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="src/Helper/Navigation/HelperInterface.php">
    <PossiblyUnusedReturnValue>
      <code>HelperInterface</code>
      <code>HelperInterface</code>
      <code>HelperInterface</code>
    </PossiblyUnusedReturnValue>
  </file>
  <file src="src/Helper/Navigation/Links.php">
    <InvalidOperand>
      <code>$relFlag</code>
    </InvalidOperand>
    <MissingConstructor>
      <code>$root</code>
    </MissingConstructor>
    <MixedArgument>
      <code>$active</code>
      <code>$arguments[0]</code>
      <code>$intermediate</code>
      <code>$intermediate</code>
      <code>$page</code>
      <code>$page</code>
      <code><![CDATA[$page->$meth()]]></code>
      <code>$type</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code>$relation</code>
    </MixedArgumentTypeCoercion>
    <MixedArrayOffset>
      <code>$result[$rel][$type]</code>
    </MixedArrayOffset>
    <MixedAssignment>
      <code>$active</code>
      <code>$found</code>
      <code>$intermediate</code>
      <code>$intermediate</code>
      <code>$page</code>
      <code>$page</code>
      <code>$result</code>
      <code>$type</code>
      <code>$value</code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code>AbstractPage|array|null</code>
      <code>array|null</code>
    </MixedInferredReturnType>
    <MixedReturnStatement>
      <code>$found</code>
      <code>$found</code>
      <code>count($result) === 1 ? $result[0] : $result</code>
      <code>count($result) === 1 ? $result[0] : $result</code>
    </MixedReturnStatement>
    <PossiblyNullPropertyAssignmentValue>
      <code>null</code>
    </PossiblyNullPropertyAssignmentValue>
    <PossiblyUnusedMethod>
      <code>searchRelChapter</code>
      <code>searchRelNext</code>
      <code>searchRelPrev</code>
      <code>searchRelSection</code>
      <code>searchRelStart</code>
      <code>searchRelSubsection</code>
      <code>searchRevSection</code>
      <code>searchRevSubsection</code>
    </PossiblyUnusedMethod>
    <RedundantCastGivenDocblockType>
      <code>(int) $renderFlag</code>
    </RedundantCastGivenDocblockType>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[$this->root]]></code>
    </RedundantConditionGivenDocblockType>
    <TypeDoesNotContainNull>
      <code>null === $container</code>
    </TypeDoesNotContainNull>
  </file>
  <file src="src/Helper/Navigation/Listener/AclListener.php">
    <MixedAssignment>
      <code>$acl</code>
      <code>$page</code>
      <code>$privilege</code>
      <code>$resource</code>
      <code>$role</code>
    </MixedAssignment>
    <MixedMethodCall>
      <code>getPrivilege</code>
      <code>getResource</code>
      <code>hasResource</code>
      <code>isAllowed</code>
    </MixedMethodCall>
    <PossiblyInvalidArrayAccess>
      <code><![CDATA[$params['acl']]]></code>
      <code><![CDATA[$params['page']]]></code>
      <code><![CDATA[$params['role']]]></code>
    </PossiblyInvalidArrayAccess>
    <PossiblyUnusedReturnValue>
      <code>bool</code>
    </PossiblyUnusedReturnValue>
  </file>
  <file src="src/Helper/Navigation/Menu.php">
    <DocblockTypeContradiction>
      <code>null === $partial</code>
    </DocblockTypeContradiction>
    <InvalidReturnStatement>
      <code><![CDATA[$this->renderPartialModel($params, $container, $partial)]]></code>
      <code><![CDATA[$this->renderPartialModel([], $container, $partial)]]></code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code>string</code>
      <code>string</code>
    </InvalidReturnType>
    <MissingConstructor>
      <code>$partial</code>
    </MissingConstructor>
    <MixedArgument>
      <code><![CDATA[$options['addClassToListItem']]]></code>
      <code><![CDATA[$options['addClassToListItem']]]></code>
      <code><![CDATA[$options['escapeLabels']]]></code>
      <code><![CDATA[$options['escapeLabels']]]></code>
      <code><![CDATA[$options['indent']]]></code>
      <code><![CDATA[$options['indent']]]></code>
      <code><![CDATA[$options['indent']]]></code>
      <code><![CDATA[$options['liActiveClass']]]></code>
      <code><![CDATA[$options['liActiveClass']]]></code>
      <code><![CDATA[$options['maxDepth']]]></code>
      <code><![CDATA[$options['maxDepth']]]></code>
      <code><![CDATA[$options['minDepth']]]></code>
      <code><![CDATA[$options['minDepth']]]></code>
      <code><![CDATA[$options['onlyActiveBranch']]]></code>
      <code><![CDATA[$options['ulClass']]]></code>
      <code><![CDATA[$options['ulClass']]]></code>
      <code>$page</code>
      <code>$page</code>
      <code><![CDATA[$page->getTextDomain()]]></code>
      <code><![CDATA[$page->getTextDomain()]]></code>
      <code>$partial[0]</code>
      <code>$subPage</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code>$liClasses</code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment>
      <code><![CDATA[$active['page']]]></code>
      <code><![CDATA[$active['page']]]></code>
      <code>$foundDepth</code>
      <code>$foundPage</code>
      <code>$isActive</code>
      <code>$liClasses[]</code>
      <code>$page</code>
      <code>$subPage</code>
    </MixedAssignment>
    <MixedMethodCall>
      <code>getClass</code>
      <code>getClass</code>
      <code>getParent</code>
      <code>getParent</code>
      <code>getParent</code>
      <code>hasPage</code>
      <code>hasPage</code>
      <code>hasPages</code>
      <code>hasPages</code>
      <code>hasPages</code>
      <code>isActive</code>
    </MixedMethodCall>
    <MixedOperand>
      <code><![CDATA[$active['depth']]]></code>
      <code>$escaper($label)</code>
      <code>$escaper($ulClass)</code>
      <code>$escaper($ulClass)</code>
      <code><![CDATA[$escaper(implode(' ', $liClasses))]]></code>
      <code><![CDATA[$escaper(implode(' ', $liClasses))]]></code>
      <code>$foundDepth</code>
    </MixedOperand>
    <MoreSpecificImplementedParamType>
      <code>$container</code>
    </MoreSpecificImplementedParamType>
    <PossiblyNullArgument>
      <code><![CDATA[$page->getTitle()]]></code>
    </PossiblyNullArgument>
    <PossiblyNullOperand>
      <code>$minDepth</code>
      <code>$minDepth</code>
    </PossiblyNullOperand>
    <PossiblyNullPropertyAssignmentValue>
      <code>$partial</code>
    </PossiblyNullPropertyAssignmentValue>
    <PossiblyNullReference>
      <code>plugin</code>
      <code>plugin</code>
      <code>plugin</code>
      <code>plugin</code>
    </PossiblyNullReference>
    <PossiblyUnusedMethod>
      <code>escapeLabels</code>
      <code>setAddClassToListItem</code>
    </PossiblyUnusedMethod>
    <RedundantCastGivenDocblockType>
      <code>(bool) $flag</code>
      <code>(bool) $flag</code>
      <code>(bool) $flag</code>
      <code>(bool) $flag</code>
    </RedundantCastGivenDocblockType>
    <RedundantConditionGivenDocblockType>
      <code>is_array($partial)</code>
      <code>is_string($liActiveClass)</code>
      <code>is_string($ulClass)</code>
    </RedundantConditionGivenDocblockType>
    <TypeDoesNotContainNull>
      <code>null === $container</code>
      <code>null === $container</code>
    </TypeDoesNotContainNull>
    <UndefinedInterfaceMethod>
      <code>plugin</code>
      <code>plugin</code>
      <code>plugin</code>
      <code>plugin</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="src/Helper/Navigation/PluginManager.php">
    <NonInvariantDocblockPropertyType>
      <code>$aliases</code>
    </NonInvariantDocblockPropertyType>
  </file>
  <file src="src/Helper/Navigation/Sitemap.php">
    <MissingConstructor>
      <code>$serverUrl</code>
    </MissingConstructor>
    <MixedArgument>
      <code>$changefreq</code>
      <code>$changefreq</code>
      <code>$curDoc</code>
      <code>$page</code>
      <code>$page</code>
      <code>$priority</code>
      <code>$priority</code>
    </MixedArgument>
    <MixedAssignment>
      <code>$basePathHelper</code>
      <code>$changefreq</code>
      <code>$curDoc</code>
      <code>$escaper</code>
      <code>$page</code>
      <code>$priority</code>
      <code>$serverUrlHelper</code>
      <code><![CDATA[$this->serverUrl]]></code>
    </MixedAssignment>
    <MixedFunctionCall>
      <code>$basePathHelper()</code>
      <code>$escaper($string)</code>
      <code>$serverUrlHelper()</code>
    </MixedFunctionCall>
    <MixedInferredReturnType>
      <code>string</code>
      <code>string</code>
    </MixedInferredReturnType>
    <MixedReturnStatement>
      <code>$escaper($string)</code>
      <code><![CDATA[$this->serverUrl]]></code>
      <code><![CDATA[$this->serverUrl]]></code>
    </MixedReturnStatement>
    <MoreSpecificImplementedParamType>
      <code>$container</code>
    </MoreSpecificImplementedParamType>
    <PossiblyFalseArgument>
      <code>$lastmod</code>
    </PossiblyFalseArgument>
    <PossiblyNullReference>
      <code>isValid</code>
      <code>isValid</code>
      <code>isValid</code>
      <code>isValid</code>
      <code>plugin</code>
      <code>plugin</code>
      <code>plugin</code>
    </PossiblyNullReference>
    <RedundantCastGivenDocblockType>
      <code>(bool) $formatOutput</code>
      <code>(bool) $schemaValidation</code>
      <code>(bool) $useSitemapValidators</code>
      <code>(bool) $useXmlDecl</code>
      <code>(string) $href</code>
      <code>(string) $href</code>
    </RedundantCastGivenDocblockType>
    <RedundantPropertyInitializationCheck>
      <code><![CDATA[isset($this->serverUrl)]]></code>
    </RedundantPropertyInitializationCheck>
    <UndefinedInterfaceMethod>
      <code>plugin</code>
      <code>plugin</code>
      <code>plugin</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="src/Helper/PaginationControl.php">
    <DocblockTypeContradiction>
      <code>static::$defaultViewPartial === null</code>
    </DocblockTypeContradiction>
    <MixedAssignment>
      <code>$partial</code>
      <code>$partialHelper</code>
      <code>$partialHelper</code>
    </MixedAssignment>
    <MixedFunctionCall>
      <code>$partialHelper($partial, $pages)</code>
      <code>$partialHelper($partial[0], $pages)</code>
    </MixedFunctionCall>
    <MixedInferredReturnType>
      <code>string</code>
    </MixedInferredReturnType>
    <MixedReturnStatement>
      <code>$partialHelper($partial, $pages)</code>
      <code>$partialHelper($partial[0], $pages)</code>
    </MixedReturnStatement>
    <NoInterfaceProperties>
      <code><![CDATA[$this->view->paginator]]></code>
    </NoInterfaceProperties>
    <PossiblyNullReference>
      <code>plugin</code>
      <code>plugin</code>
    </PossiblyNullReference>
    <UndefinedInterfaceMethod>
      <code>plugin</code>
      <code>plugin</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="src/Helper/Partial.php">
    <DocblockTypeContradiction>
      <code>is_scalar($values)</code>
    </DocblockTypeContradiction>
    <MissingConstructor>
      <code>$objectKey</code>
      <code>$objectKey</code>
    </MissingConstructor>
    <MixedArgument>
      <code>$values</code>
    </MixedArgument>
    <MixedAssignment>
      <code>$values</code>
    </MixedAssignment>
    <PossiblyNullArgument>
      <code>$name</code>
    </PossiblyNullArgument>
    <PossiblyNullPropertyAssignmentValue>
      <code>null</code>
    </PossiblyNullPropertyAssignmentValue>
    <PossiblyNullReference>
      <code>render</code>
      <code>render</code>
    </PossiblyNullReference>
    <RedundantCastGivenDocblockType>
      <code>(string) $key</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="src/Helper/PartialLoop.php">
    <LessSpecificReturnStatement>
      <code>parent::setObjectKey($key)</code>
    </LessSpecificReturnStatement>
    <MixedArgument>
      <code>$item</code>
    </MixedArgument>
    <MixedAssignment>
      <code>$item</code>
      <code><![CDATA[$this->objectKey]]></code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code>array</code>
    </MixedInferredReturnType>
    <MixedReturnStatement>
      <code><![CDATA[$values->toArray()]]></code>
    </MixedReturnStatement>
    <MoreSpecificImplementedParamType>
      <code>$name</code>
      <code>$values</code>
    </MoreSpecificImplementedParamType>
    <MoreSpecificReturnType>
      <code>self</code>
    </MoreSpecificReturnType>
    <PossiblyInvalidOperand>
      <code>parent::__invoke($name, $item)</code>
    </PossiblyInvalidOperand>
    <PossiblyUnusedReturnValue>
      <code>self</code>
    </PossiblyUnusedReturnValue>
    <RedundantCastGivenDocblockType>
      <code>(string) $key</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="src/Helper/Placeholder.php">
    <RedundantCastGivenDocblockType>
      <code>(string) $key</code>
      <code>(string) $key</code>
      <code>(string) $key</code>
      <code>(string) $key</code>
    </RedundantCastGivenDocblockType>
    <UnsafeInstantiation>
      <code><![CDATA[new $this->containerClass($value)]]></code>
    </UnsafeInstantiation>
  </file>
  <file src="src/Helper/Placeholder/Container.php">
    <InvalidTemplateParam>
      <code>Container</code>
    </InvalidTemplateParam>
  </file>
  <file src="src/Helper/Placeholder/Container/AbstractContainer.php">
    <DocblockTypeContradiction>
      <code>is_scalar($key)</code>
    </DocblockTypeContradiction>
    <ImplementedReturnTypeMismatch>
      <code>$this</code>
    </ImplementedReturnTypeMismatch>
    <InvalidArgument>
      <code>$data</code>
      <code>$data</code>
      <code>$data</code>
      <code>$data</code>
      <code><![CDATA[$this->nextIndex()]]></code>
      <code><![CDATA[$this->nextIndex()]]></code>
      <code>$this[$key] .= $data</code>
    </InvalidArgument>
    <InvalidParamDefault>
      <code>TKey</code>
    </InvalidParamDefault>
    <InvalidReturnStatement>
      <code>max($keys) + 1</code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code>int</code>
    </InvalidReturnType>
    <MixedArgumentTypeCoercion>
      <code>$items</code>
    </MixedArgumentTypeCoercion>
    <MixedOperand>
      <code>$this[$key]</code>
      <code>max($keys)</code>
    </MixedOperand>
    <NoValue>
      <code><![CDATA[$this->captureKey]]></code>
    </NoValue>
    <RedundantCastGivenDocblockType>
      <code>(string) $postfix</code>
      <code>(string) $prefix</code>
      <code>(string) $separator</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="src/Helper/Placeholder/Container/AbstractStandalone.php">
    <InvalidPropertyAssignmentValue>
      <code>$container</code>
      <code><![CDATA[new $this->containerClass()]]></code>
    </InvalidPropertyAssignmentValue>
    <InvalidReturnStatement>
      <code><![CDATA[$this->container]]></code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code><![CDATA[AbstractContainer<TKey, TValue>]]></code>
    </InvalidReturnType>
    <InvalidTemplateParam>
      <code><![CDATA[AbstractContainer<TKey, TValue>]]></code>
      <code><![CDATA[AbstractContainer<TKey, TValue>|null]]></code>
    </InvalidTemplateParam>
    <MixedArgumentTypeCoercion>
      <code><![CDATA[$this->getContainer()]]></code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment>
      <code>$return</code>
    </MixedAssignment>
    <PossiblyUnusedMethod>
      <code>__get</code>
      <code>__set</code>
    </PossiblyUnusedMethod>
    <RedundantCastGivenDocblockType>
      <code>(bool) $autoEscape</code>
      <code>(string) $string</code>
      <code>(string) $string</code>
    </RedundantCastGivenDocblockType>
    <UnsafeInstantiation>
      <code><![CDATA[new $this->containerClass()]]></code>
    </UnsafeInstantiation>
  </file>
  <file src="src/Helper/Placeholder/Registry.php">
    <InvalidStringClass>
      <code><![CDATA[new $this->containerClass($value)]]></code>
    </InvalidStringClass>
    <LessSpecificReturnStatement>
      <code><![CDATA[$this->items[$key]]]></code>
    </LessSpecificReturnStatement>
    <MixedInferredReturnType>
      <code>AbstractContainer</code>
    </MixedInferredReturnType>
    <MixedReturnStatement>
      <code><![CDATA[$this->items[$key]]]></code>
    </MixedReturnStatement>
    <MoreSpecificReturnType>
      <code>AbstractContainer</code>
    </MoreSpecificReturnType>
    <PossiblyUnusedProperty>
      <code>$instance</code>
    </PossiblyUnusedProperty>
    <RedundantCastGivenDocblockType>
      <code>(string) $key</code>
      <code>(string) $key</code>
      <code>(string) $key</code>
      <code>(string) $key</code>
      <code>(string) $key</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="src/Helper/RenderChildModel.php">
    <MissingConstructor>
      <code>$current</code>
      <code>$viewModelHelper</code>
    </MissingConstructor>
    <MixedAssignment>
      <code><![CDATA[$this->viewModelHelper]]></code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code>ViewModel</code>
    </MixedInferredReturnType>
    <MixedReturnStatement>
      <code><![CDATA[$this->viewModelHelper]]></code>
    </MixedReturnStatement>
    <PossiblyNullArgument>
      <code><![CDATA[$this->getView()]]></code>
    </PossiblyNullArgument>
    <PossiblyNullPropertyAssignmentValue>
      <code><![CDATA[$model = $this->getCurrent()]]></code>
    </PossiblyNullPropertyAssignmentValue>
    <PossiblyNullReference>
      <code>getChildren</code>
      <code>plugin</code>
      <code>render</code>
    </PossiblyNullReference>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[$this->viewModelHelper]]></code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/Helper/RenderToPlaceholder.php">
    <MixedAssignment>
      <code>$placeholderHelper</code>
    </MixedAssignment>
    <MixedFunctionCall>
      <code>$placeholderHelper($placeholder)</code>
      <code>$placeholderHelper($placeholder)</code>
    </MixedFunctionCall>
    <MixedMethodCall>
      <code>captureEnd</code>
      <code>captureStart</code>
    </MixedMethodCall>
    <PossiblyNullReference>
      <code>plugin</code>
      <code>render</code>
    </PossiblyNullReference>
    <UndefinedInterfaceMethod>
      <code>plugin</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="src/Helper/ServerUrl.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$_SERVER['SERVER_PORT']]]></code>
      <code>$port</code>
    </ArgumentTypeCoercion>
    <InvalidNullableReturnType>
      <code>string</code>
      <code>string</code>
    </InvalidNullableReturnType>
    <NullableReturnStatement>
      <code><![CDATA[$this->host]]></code>
      <code><![CDATA[$this->scheme]]></code>
    </NullableReturnStatement>
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$_SERVER['REQUEST_URI']]]></code>
    </PossiblyUndefinedArrayOffset>
    <RedundantCastGivenDocblockType>
      <code>(bool) $useProxy</code>
    </RedundantCastGivenDocblockType>
    <TypeDoesNotContainType>
      <code><![CDATA[$_SERVER['HTTPS'] === true]]></code>
    </TypeDoesNotContainType>
  </file>
  <file src="src/Helper/Service/DoctypeFactory.php">
    <MixedArgument>
      <code><![CDATA[$config['view_helper_config']['doctype']]]></code>
    </MixedArgument>
    <MixedArrayAccess>
      <code><![CDATA[$config['view_helper_config']]]></code>
      <code><![CDATA[$config['view_helper_config']['doctype']]]></code>
    </MixedArrayAccess>
    <MixedAssignment>
      <code>$config</code>
    </MixedAssignment>
  </file>
  <file src="src/Helper/TranslatorAwareTrait.php">
    <RedundantCastGivenDocblockType>
      <code>(bool) $enabled</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="src/Helper/Url.php">
    <DocblockTypeContradiction>
      <code><![CDATA[3 === func_num_args() && is_bool($options)]]></code>
      <code>is_array($params)</code>
      <code>is_bool($options)</code>
    </DocblockTypeContradiction>
    <InvalidArrayAssignment>
      <code><![CDATA[$options['name']]]></code>
    </InvalidArrayAssignment>
    <MixedAssignment>
      <code><![CDATA[$routeMatchParams['controller']]]></code>
    </MixedAssignment>
    <NoValue>
      <code>$params</code>
      <code>$reuseMatchedParams</code>
    </NoValue>
    <PossiblyInvalidArgument>
      <code>$options</code>
    </PossiblyInvalidArgument>
    <UnusedVariable>
      <code>$reuseMatchedParams</code>
    </UnusedVariable>
  </file>
  <file src="src/Helper/ViewModel.php">
    <PossiblyUnusedMethod>
      <code>hasRoot</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="src/HelperPluginManager.php">
    <DeprecatedInterface>
      <code>null|ConfigInterface|ContainerInterface</code>
    </DeprecatedInterface>
    <DocblockTypeContradiction>
      <code>! $events</code>
      <code>! $events</code>
    </DocblockTypeContradiction>
    <MixedArgument>
      <code><![CDATA[$container->get('EventManager')]]></code>
      <code><![CDATA[$container->get('MvcTranslator')]]></code>
      <code><![CDATA[$container->get('Translator')]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code>$container</code>
      <code>$container</code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code>($name is class-string ? T : HelperInterface|callable)</code>
    </MixedInferredReturnType>
    <MixedReturnStatement>
      <code>parent::get($name, $options)</code>
    </MixedReturnStatement>
    <PossiblyUnusedMethod>
      <code>injectEventManager</code>
      <code>injectRenderer</code>
      <code>injectTranslator</code>
      <code>validatePlugin</code>
    </PossiblyUnusedMethod>
    <PropertyTypeCoercion>
      <code><![CDATA[$this->initializers]]></code>
      <code><![CDATA[$this->initializers]]></code>
    </PropertyTypeCoercion>
    <UndefinedInterfaceMethod>
      <code>getServiceLocator</code>
      <code>getServiceLocator</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="src/HtmlAttributesSet.php">
    <MissingTemplateParam>
      <code>HtmlAttributesSet</code>
    </MissingTemplateParam>
    <MixedArgumentTypeCoercion>
      <code>$value</code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment>
      <code>$storeValue</code>
      <code>$value</code>
    </MixedAssignment>
  </file>
  <file src="src/Model/ClearableModelInterface.php">
    <MissingReturnType>
      <code>clearChildren</code>
      <code>clearOptions</code>
      <code>clearVariables</code>
    </MissingReturnType>
  </file>
  <file src="src/Model/FeedModel.php">
    <MixedAssignment>
      <code><![CDATA[$this->type]]></code>
      <code><![CDATA[$this->type]]></code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code>false|string</code>
    </MixedInferredReturnType>
    <MixedReturnStatement>
      <code><![CDATA[$this->type]]></code>
      <code><![CDATA[$this->type]]></code>
    </MixedReturnStatement>
    <PossiblyInvalidArgument>
      <code>$variables</code>
    </PossiblyInvalidArgument>
    <PropertyNotSetInConstructor>
      <code>$feed</code>
    </PropertyNotSetInConstructor>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[$this->feed instanceof Feed]]></code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/Model/JsonModel.php">
    <NonInvariantDocblockPropertyType>
      <code>$captureTo</code>
    </NonInvariantDocblockPropertyType>
  </file>
  <file src="src/Model/ModelInterface.php">
    <PossiblyUnusedReturnValue>
      <code>ModelInterface</code>
      <code>ModelInterface</code>
      <code>ModelInterface</code>
      <code>ModelInterface</code>
      <code>ModelInterface</code>
      <code>ModelInterface</code>
      <code>ModelInterface</code>
      <code>ModelInterface</code>
    </PossiblyUnusedReturnValue>
  </file>
  <file src="src/Model/ViewModel.php">
    <DocblockTypeContradiction>
      <code>gettype($variables)</code>
      <code>is_array($options)</code>
    </DocblockTypeContradiction>
    <ImplementedReturnTypeMismatch>
      <code>array|ArrayAccess|Traversable</code>
    </ImplementedReturnTypeMismatch>
    <MixedArgumentTypeCoercion>
      <code>$key</code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment>
      <code>$value</code>
    </MixedAssignment>
    <PossiblyInvalidArrayAccess>
      <code>$variables[$name]</code>
    </PossiblyInvalidArrayAccess>
    <RedundantCastGivenDocblockType>
      <code>(bool) $append</code>
      <code>(bool) $terminate</code>
      <code>(string) $capture</code>
      <code>(string) $name</code>
      <code>(string) $name</code>
      <code>(string) $name</code>
      <code>(string) $name</code>
      <code>(string) $template</code>
    </RedundantCastGivenDocblockType>
    <RedundantConditionGivenDocblockType>
      <code>is_object($variables)</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/Renderer/FeedRenderer.php">
    <InvalidArgument>
      <code>(array) $nameOrModel</code>
    </InvalidArgument>
    <InvalidArrayAccess>
      <code><![CDATA[$options['feed_type']]]></code>
    </InvalidArrayAccess>
    <MissingConstructor>
      <code>$resolver</code>
    </MissingConstructor>
    <MixedAssignment>
      <code>$type</code>
    </MixedAssignment>
    <MoreSpecificImplementedParamType>
      <code>$values</code>
    </MoreSpecificImplementedParamType>
    <PossiblyUnusedProperty>
      <code>$resolver</code>
    </PossiblyUnusedProperty>
    <RedundantConditionGivenDocblockType>
      <code>is_string($nameOrModel)</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/Renderer/JsonRenderer.php">
    <MissingConstructor>
      <code>$jsonpCallback</code>
    </MissingConstructor>
    <MixedArgumentTypeCoercion>
      <code>$child</code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment>
      <code>$value</code>
    </MixedAssignment>
    <NoValue>
      <code>$nameOrModel</code>
      <code>$nameOrModel</code>
    </NoValue>
    <PossiblyInvalidArgument>
      <code>$childValues</code>
      <code>$children</code>
      <code>$values</code>
    </PossiblyInvalidArgument>
    <PossiblyUnusedProperty>
      <code>$resolver</code>
    </PossiblyUnusedProperty>
    <RedundantCastGivenDocblockType>
      <code>(bool) $mergeUnnamedChildren</code>
      <code>(string) $callback</code>
    </RedundantCastGivenDocblockType>
    <RedundantCondition>
      <code>$mergeChildren</code>
    </RedundantCondition>
    <RedundantConditionGivenDocblockType>
      <code>! is_object($nameOrModel)</code>
      <code><![CDATA[null !== $this->jsonpCallback]]></code>
    </RedundantConditionGivenDocblockType>
    <TypeDoesNotContainType>
      <code>$nameOrModel instanceof Traversable</code>
    </TypeDoesNotContainType>
  </file>
  <file src="src/Renderer/PhpRenderer.php">
    <DocblockTypeContradiction>
      <code><![CDATA[! is_array($variables) && ! $variables instanceof ArrayAccess]]></code>
      <code>gettype($helpers)</code>
    </DocblockTypeContradiction>
    <FalsableReturnStatement>
      <code><![CDATA[$this->__templateResolver->resolve($name, $this)]]></code>
    </FalsableReturnStatement>
    <ImplementedParamTypeMismatch>
      <code>$values</code>
    </ImplementedParamTypeMismatch>
    <InvalidNullableReturnType>
      <code>string|Resolver</code>
    </InvalidNullableReturnType>
    <MixedArgument>
      <code><![CDATA[$this->__template]]></code>
      <code><![CDATA[$this->__template]]></code>
      <code><![CDATA[array_pop($this->__varsCache)]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code>$includeReturn</code>
      <code><![CDATA[$this->__template]]></code>
      <code>$value</code>
      <code>$value</code>
      <code>$variablesAsArray[$key]</code>
      <code>$vars[$name]</code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code>string</code>
    </MixedInferredReturnType>
    <MixedMethodCall>
      <code>new $helpers(new ServiceManager())</code>
    </MixedMethodCall>
    <MixedReturnStatement>
      <code><![CDATA[$this->__filterChain->filter($this->__content)]]></code>
      <code><![CDATA[$this->__vars[$key]]]></code>
    </MixedReturnStatement>
    <NullableReturnStatement>
      <code><![CDATA[$this->__templateResolver]]></code>
    </NullableReturnStatement>
    <PossibleRawObjectIteration>
      <code>$variables</code>
    </PossibleRawObjectIteration>
    <PossiblyInvalidArgument>
      <code>$values</code>
    </PossiblyInvalidArgument>
    <PossiblyInvalidPropertyAssignmentValue>
      <code><![CDATA[$this->resolver($this->__template)]]></code>
    </PossiblyInvalidPropertyAssignmentValue>
    <PossiblyNullArrayAccess>
      <code><![CDATA[$this->__vars[$key]]]></code>
    </PossiblyNullArrayAccess>
    <PossiblyNullReference>
      <code><![CDATA[$this->__vars]]></code>
      <code>resolve</code>
    </PossiblyNullReference>
    <PossiblyUnusedParam>
      <code>$config</code>
    </PossiblyUnusedParam>
    <RedundantCastGivenDocblockType>
      <code>(bool) $renderTrees</code>
    </RedundantCastGivenDocblockType>
    <RedundantConditionGivenDocblockType>
      <code>is_object($helpers)</code>
    </RedundantConditionGivenDocblockType>
    <UnresolvableInclude>
      <code><![CDATA[include $this->__file]]></code>
    </UnresolvableInclude>
  </file>
  <file src="src/Resolver/AggregateResolver.php">
    <DeprecatedProperty>
      <code><![CDATA[$this->lastLookupFailure]]></code>
      <code><![CDATA[$this->lastLookupFailure]]></code>
      <code><![CDATA[$this->lastLookupFailure]]></code>
      <code><![CDATA[$this->lastLookupFailure]]></code>
      <code><![CDATA[$this->lastSuccessfulResolver]]></code>
      <code><![CDATA[$this->lastSuccessfulResolver]]></code>
      <code><![CDATA[$this->lastSuccessfulResolver]]></code>
    </DeprecatedProperty>
  </file>
  <file src="src/Resolver/PrefixPathStackResolver.php">
    <InvalidNullableReturnType>
      <code>resolve</code>
    </InvalidNullableReturnType>
    <RedundantCastGivenDocblockType>
      <code>(string) $prefix</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="src/Resolver/TemplateMapResolver.php">
    <DocblockTypeContradiction>
      <code>is_iterable($map)</code>
      <code>is_iterable($map)</code>
    </DocblockTypeContradiction>
    <MixedPropertyTypeCoercion>
      <code><![CDATA[array_replace_recursive($this->map, $map)]]></code>
    </MixedPropertyTypeCoercion>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[is_string($nameOrMap) && is_string($path)]]></code>
      <code>is_string($path)</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/Resolver/TemplatePathStack.php">
    <DeprecatedConstant>
      <code>static::FAILURE_NOT_FOUND</code>
      <code>static::FAILURE_NO_PATHS</code>
    </DeprecatedConstant>
    <DeprecatedProperty>
      <code><![CDATA[$this->lastLookupFailure]]></code>
      <code><![CDATA[$this->lastLookupFailure]]></code>
      <code><![CDATA[$this->lastLookupFailure]]></code>
      <code><![CDATA[$this->lastLookupFailure]]></code>
    </DeprecatedProperty>
    <DocblockTypeContradiction>
      <code>is_string($path)</code>
    </DocblockTypeContradiction>
    <FalsableReturnStatement>
      <code>false</code>
      <code>false</code>
    </FalsableReturnStatement>
    <MixedArgument>
      <code><![CDATA[$options['default_suffix']]]></code>
      <code><![CDATA[$options['lfi_protection']]]></code>
      <code><![CDATA[$options['script_paths']]]></code>
    </MixedArgument>
    <PossiblyUnusedReturnValue>
      <code>TemplatePathStack</code>
    </PossiblyUnusedReturnValue>
    <RedundantCastGivenDocblockType>
      <code>(bool) $flag</code>
      <code>(string) $defaultSuffix</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="src/Strategy/FeedStrategy.php">
    <MixedAssignment>
      <code>$headers</code>
    </MixedAssignment>
    <MixedMethodCall>
      <code>addHeaderLine</code>
    </MixedMethodCall>
    <PossiblyNullReference>
      <code>setContent</code>
    </PossiblyNullReference>
    <UndefinedInterfaceMethod>
      <code>getHeaders</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="src/Strategy/JsonStrategy.php">
    <MixedAssignment>
      <code>$headers</code>
    </MixedAssignment>
    <MixedMethodCall>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
    </MixedMethodCall>
    <PossiblyNullReference>
      <code>setContent</code>
    </PossiblyNullReference>
    <RedundantCastGivenDocblockType>
      <code>(string) $charset</code>
    </RedundantCastGivenDocblockType>
    <UndefinedInterfaceMethod>
      <code>getHeaders</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="src/Strategy/PhpRendererStrategy.php">
    <MixedAssignment>
      <code>$placeholders</code>
      <code>$result</code>
    </MixedAssignment>
    <MixedMethodCall>
      <code>containerExists</code>
      <code>getContainer</code>
    </MixedMethodCall>
    <MixedPropertyTypeCoercion>
      <code>$contentPlaceholders</code>
    </MixedPropertyTypeCoercion>
    <PossiblyNullReference>
      <code>plugin</code>
    </PossiblyNullReference>
    <PossiblyUnusedParam>
      <code>$e</code>
    </PossiblyUnusedParam>
    <UndefinedInterfaceMethod>
      <code>plugin</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="src/Variables.php">
    <MixedArgument>
      <code>$value</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code>$key</code>
      <code>$key</code>
      <code>ArrayIterator::class</code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment>
      <code>$return</code>
      <code>$return</code>
      <code>$spec</code>
      <code>$this[$key]</code>
      <code>$this[$key]</code>
      <code>$value</code>
      <code>$value</code>
    </MixedAssignment>
    <RedundantCastGivenDocblockType>
      <code>(bool) $flag</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="src/View.php">
    <ImplementedReturnTypeMismatch>
      <code>View</code>
    </ImplementedReturnTypeMismatch>
    <InvalidArgument>
      <code>$options</code>
    </InvalidArgument>
    <MissingClosureParamType>
      <code>$result</code>
    </MissingClosureParamType>
    <MissingConstructor>
      <code>$events</code>
      <code>$request</code>
      <code>$response</code>
    </MissingConstructor>
    <MixedAssignment>
      <code>$oldResult</code>
    </MixedAssignment>
    <MixedOperand>
      <code>$oldResult</code>
    </MixedOperand>
    <ParamNameMismatch>
      <code>$events</code>
    </ParamNameMismatch>
    <PossiblyNullReference>
      <code>hasChildren</code>
    </PossiblyNullReference>
  </file>
  <file src="src/ViewEvent.php">
    <ImplementedReturnTypeMismatch>
      <code>ViewEvent</code>
      <code>ViewEvent</code>
    </ImplementedReturnTypeMismatch>
    <MixedArgument>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
    </MixedArgument>
    <MixedAssignment>
      <code><![CDATA[$params['result']]]></code>
    </MixedAssignment>
    <MoreSpecificImplementedParamType>
      <code>$name</code>
      <code>$name</code>
    </MoreSpecificImplementedParamType>
    <PossiblyUndefinedArrayOffset>
      <code>$params[$param]</code>
    </PossiblyUndefinedArrayOffset>
  </file>
  <file src="test/Helper/CycleTest.php">
    <RedundantCastGivenDocblockType>
      <code><![CDATA[(string) $this->helper->toString()]]></code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="test/Helper/DeclareVarsTest.php">
    <PossiblyInvalidMethodCall>
      <code>addPath</code>
    </PossiblyInvalidMethodCall>
    <RedundantCondition>
      <code>assertTrue</code>
      <code>assertTrue</code>
      <code>assertTrue</code>
    </RedundantCondition>
    <UndefinedInterfaceMethod>
      <code>addPath</code>
    </UndefinedInterfaceMethod>
    <UndefinedPropertyAssignment>
      <code><![CDATA[$vars->varName2]]></code>
      <code><![CDATA[$vars->varName3]]></code>
      <code><![CDATA[$vars->varName5]]></code>
    </UndefinedPropertyAssignment>
  </file>
  <file src="test/Helper/EscapeCssTest.php">
    <MixedAssignment>
      <code>$test</code>
      <code>$test</code>
      <code>$test</code>
      <code>$test</code>
    </MixedAssignment>
  </file>
  <file src="test/Helper/EscapeHtmlAttrTest.php">
    <MixedAssignment>
      <code>$test</code>
      <code>$test</code>
      <code>$test</code>
      <code>$test</code>
    </MixedAssignment>
  </file>
  <file src="test/Helper/EscapeHtmlTest.php">
    <MixedAssignment>
      <code>$test</code>
      <code>$test</code>
      <code>$test</code>
      <code>$test</code>
    </MixedAssignment>
  </file>
  <file src="test/Helper/EscapeJsTest.php">
    <MixedAssignment>
      <code>$test</code>
      <code>$test</code>
      <code>$test</code>
      <code>$test</code>
    </MixedAssignment>
  </file>
  <file src="test/Helper/EscapeUrlTest.php">
    <MixedAssignment>
      <code>$test</code>
      <code>$test</code>
      <code>$test</code>
      <code>$test</code>
    </MixedAssignment>
  </file>
  <file src="test/Helper/GravatarTest.php">
    <PossiblyInvalidArgument>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
    </PossiblyInvalidArgument>
    <UndefinedMethod>
      <code>gravatar</code>
    </UndefinedMethod>
  </file>
  <file src="test/Helper/HeadLinkTest.php">
    <MixedArgument>
      <code><![CDATA[$attributeEscaper('/styles.css')]]></code>
      <code><![CDATA[$attributeEscaper('/styles.css')]]></code>
      <code><![CDATA[$attributeEscaper('/styles.css')]]></code>
      <code><![CDATA[$attributeEscaper('/styles.css')]]></code>
      <code><![CDATA[$attributeEscaper('/test1.css')]]></code>
      <code><![CDATA[$attributeEscaper('/test2.css')]]></code>
      <code><![CDATA[$attributeEscaper('/test3.css')]]></code>
      <code><![CDATA[$attributeEscaper('/test4.css')]]></code>
      <code><![CDATA[$attributeEscaper('text/css')]]></code>
      <code>$item</code>
      <code>$item</code>
      <code>$item</code>
      <code>$item</code>
      <code>$item</code>
    </MixedArgument>
    <MixedArrayOffset>
      <code>$order[$key]</code>
      <code>$order[$key]</code>
      <code>$order[$key]</code>
    </MixedArrayOffset>
    <MixedAssignment>
      <code>$item</code>
      <code>$item</code>
      <code>$item</code>
      <code>$item</code>
      <code>$item</code>
      <code>$key</code>
      <code>$key</code>
      <code>$key</code>
      <code>$link</code>
      <code>$link</code>
      <code>$order[$key]</code>
      <code>$order[$key]</code>
      <code>$order[$key]</code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
    </MixedAssignment>
    <MixedOperand>
      <code><![CDATA[$attributeEscaper($link['href'])]]></code>
      <code><![CDATA[$attributeEscaper($link['href'])]]></code>
      <code><![CDATA[$attributeEscaper($link['href'])]]></code>
      <code><![CDATA[$attributeEscaper($link['rel'])]]></code>
      <code><![CDATA[$attributeEscaper($link['rel'])]]></code>
      <code><![CDATA[$attributeEscaper($link['title'])]]></code>
      <code><![CDATA[$attributeEscaper($link['type'])]]></code>
      <code><![CDATA[$attributeEscaper($link['type'])]]></code>
      <code><![CDATA[$attributeEscaper($link['type'])]]></code>
      <code><![CDATA[$attributeEscaper('/foo/bar')]]></code>
      <code><![CDATA[$attributeEscaper('/foo/bar')]]></code>
    </MixedOperand>
    <MixedPropertyFetch>
      <code><![CDATA[$link->href]]></code>
      <code><![CDATA[$link->href]]></code>
      <code><![CDATA[$value->href]]></code>
      <code><![CDATA[$value->href]]></code>
      <code><![CDATA[$value->href]]></code>
    </MixedPropertyFetch>
    <UndefinedMagicMethod>
      <code>appendNext</code>
      <code>appendPrev</code>
      <code>bogusMethod</code>
      <code>getArrayCopy</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>getValue</code>
    </UndefinedMagicMethod>
  </file>
  <file src="test/Helper/HeadMetaTest.php">
    <InvalidArgument>
      <code><![CDATA['foo']]></code>
      <code><![CDATA['foo']]></code>
      <code><![CDATA['foo']]></code>
    </InvalidArgument>
    <UndefinedMagicMethod>
      <code>offsetSetHttpEquiv</code>
      <code>offsetSetHttpEquiv</code>
      <code>offsetSetName</code>
      <code>offsetSetName</code>
      <code>offsetSetName</code>
    </UndefinedMagicMethod>
  </file>
  <file src="test/Helper/HtmlListTest.php">
    <PossiblyUnusedParam>
      <code>$key</code>
    </PossiblyUnusedParam>
  </file>
  <file src="test/Helper/HtmlTagTest.php">
    <MixedArgument>
      <code>$escape($value)</code>
      <code>$escape($value)</code>
      <code><![CDATA[$escape('http://www.w3.org/1999/xhtml')]]></code>
    </MixedArgument>
  </file>
  <file src="test/Helper/Navigation/AbstractHelperTest.php">
    <MixedArgument>
      <code>$acl</code>
      <code>$acl</code>
      <code><![CDATA[$this->serviceManager->get('Navigation')]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code>$acl</code>
      <code>$acl</code>
      <code>$role</code>
      <code>$role</code>
    </MixedAssignment>
    <NonInvariantDocblockPropertyType>
      <code>$_helper</code>
    </NonInvariantDocblockPropertyType>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[$this->_helper]]></code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="test/Helper/Navigation/AbstractTestCase.php">
    <DeprecatedClass>
      <code><![CDATA[new Config((new RouterConfigProvider())->getDependencyConfig())]]></code>
    </DeprecatedClass>
  </file>
  <file src="test/Helper/Navigation/BreadcrumbsTest.php">
    <InvalidArgument>
      <code><![CDATA['Navigation']]></code>
      <code><![CDATA['Navigation']]></code>
    </InvalidArgument>
    <MixedArgument>
      <code><![CDATA[$acl['acl']]]></code>
    </MixedArgument>
    <NonInvariantDocblockPropertyType>
      <code>$_helper</code>
    </NonInvariantDocblockPropertyType>
  </file>
  <file src="test/Helper/Navigation/LinksTest.php">
    <MixedArgument>
      <code>$active</code>
      <code>$active</code>
      <code>$active</code>
      <code>$active</code>
      <code>$active</code>
      <code>$active</code>
      <code>$active</code>
      <code>$active</code>
      <code>$found</code>
      <code>$found</code>
    </MixedArgument>
    <MixedAssignment>
      <code>$active</code>
      <code>$active</code>
      <code>$active</code>
      <code>$active</code>
      <code>$active</code>
      <code>$active</code>
      <code>$active</code>
      <code>$active</code>
      <code>$active</code>
      <code>$active</code>
      <code>$active</code>
      <code>$active</code>
      <code>$active</code>
      <code>$active</code>
      <code>$active</code>
      <code>$active</code>
      <code>$active</code>
      <code>$active</code>
      <code>$active</code>
      <code>$active</code>
      <code>$active</code>
      <code>$active</code>
      <code>$active</code>
      <code>$active</code>
      <code>$active</code>
      <code>$active</code>
      <code>$active</code>
      <code>$active</code>
      <code>$active</code>
      <code>$active</code>
      <code>$active</code>
      <code>$active</code>
      <code>$active</code>
      <code>$actual</code>
      <code>$actual</code>
      <code>$actual</code>
      <code>$actual</code>
      <code>$actual</code>
      <code>$actual</code>
      <code>$actual</code>
      <code>$actual[$attrib][$type][$key]</code>
      <code>$actual[]</code>
      <code>$actual[]</code>
      <code>$actual[]</code>
      <code>$actual[]</code>
      <code>$found</code>
      <code>$found</code>
      <code>$found</code>
      <code>$found</code>
      <code>$found</code>
      <code>$found</code>
      <code>$found</code>
      <code>$found</code>
      <code>$found</code>
      <code>$found</code>
      <code>$found</code>
      <code>$page</code>
      <code>$page</code>
      <code>$page</code>
      <code>$page</code>
      <code>$page</code>
      <code>$page</code>
      <code>$page</code>
    </MixedAssignment>
    <MixedMethodCall>
      <code>addRel</code>
      <code>addRel</code>
      <code>addRel</code>
      <code>addRel</code>
      <code>addRel</code>
      <code>addRel</code>
      <code>addRel</code>
      <code>addRel</code>
      <code>addRel</code>
      <code>addRel</code>
      <code>addRev</code>
      <code>addRev</code>
      <code>getHref</code>
      <code>getHref</code>
      <code>getHref</code>
      <code>getLabel</code>
      <code>getLabel</code>
      <code>getLabel</code>
      <code>getLabel</code>
      <code>getLabel</code>
      <code>getLabel</code>
      <code>getLabel</code>
      <code>getLabel</code>
      <code>getLabel</code>
      <code>getLabel</code>
      <code>getLabel</code>
      <code>getLabel</code>
      <code>getLabel</code>
      <code>getLabel</code>
      <code>getLabel</code>
      <code>getLabel</code>
      <code>getLabel</code>
      <code>removeRel</code>
      <code>removeRev</code>
      <code>setActive</code>
      <code>setActive</code>
    </MixedMethodCall>
    <MixedPropertyAssignment>
      <code>$active</code>
      <code>$active</code>
      <code>$active</code>
      <code>$page</code>
      <code>$page</code>
    </MixedPropertyAssignment>
    <NonInvariantDocblockPropertyType>
      <code>$_helper</code>
    </NonInvariantDocblockPropertyType>
    <PossiblyInvalidMethodCall>
      <code>getHref</code>
      <code>getLabel</code>
      <code>getLabel</code>
    </PossiblyInvalidMethodCall>
    <PossiblyNullReference>
      <code>getHref</code>
      <code>getLabel</code>
      <code>getLabel</code>
    </PossiblyNullReference>
    <UnusedForeachValue>
      <code>$discard</code>
      <code>$discard</code>
    </UnusedForeachValue>
  </file>
  <file src="test/Helper/Navigation/MenuTest.php">
    <InvalidArgument>
      <code><![CDATA['Navigation']]></code>
      <code><![CDATA['Navigation']]></code>
    </InvalidArgument>
    <MixedArgument>
      <code><![CDATA[$acl['acl']]]></code>
      <code><![CDATA[$acl['acl']]]></code>
      <code><![CDATA[$acl['acl']]]></code>
      <code><![CDATA[$acl['acl']]]></code>
      <code><![CDATA[$acl['acl']]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code>$p</code>
      <code>$page</code>
    </MixedAssignment>
    <MixedMethodCall>
      <code>getRole</code>
      <code>setActive</code>
      <code>setActive</code>
    </MixedMethodCall>
    <NonInvariantDocblockPropertyType>
      <code>$_helper</code>
    </NonInvariantDocblockPropertyType>
  </file>
  <file src="test/Helper/Navigation/NavigationTest.php">
    <InvalidArgument>
      <code><![CDATA[function (int $code, string $message) {
            $this->errorHandlerMessage = $message;
        }]]></code>
    </InvalidArgument>
    <MixedArgument>
      <code><![CDATA[$acl['acl']]]></code>
      <code><![CDATA[$acl['acl']]]></code>
      <code><![CDATA[$acl['acl']]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code>$actual</code>
      <code>$creationContextValue</code>
      <code>$expected</code>
    </MixedAssignment>
    <MixedMethodCall>
      <code>getContainer</code>
      <code>getContainer</code>
      <code>getContainer</code>
    </MixedMethodCall>
    <NonInvariantDocblockPropertyType>
      <code>$_helper</code>
    </NonInvariantDocblockPropertyType>
    <PossiblyNullArgument>
      <code><![CDATA[$this->errorHandlerMessage]]></code>
    </PossiblyNullArgument>
    <TooManyArguments>
      <code><![CDATA[new Page\Uri([
                'resource'  => 'unknownresource',
                'privilege' => 'someprivilege',
            ], false)]]></code>
    </TooManyArguments>
    <UndefinedClass>
      <code>PsrContainerDecorator</code>
    </UndefinedClass>
  </file>
  <file src="test/Helper/Navigation/PluginManagerCompatibilityTest.php">
    <DeprecatedClass>
      <code><![CDATA[new Config([
            'navigation' => [
                'default' => [],
            ],
        ])]]></code>
    </DeprecatedClass>
  </file>
  <file src="test/Helper/Navigation/SitemapTest.php">
    <MixedArgument>
      <code><![CDATA[$acl['acl']]]></code>
      <code><![CDATA[$acl['acl']]]></code>
    </MixedArgument>
    <MixedMethodCall>
      <code>setBasePath</code>
    </MixedMethodCall>
    <NonInvariantDocblockPropertyType>
      <code>$_helper</code>
    </NonInvariantDocblockPropertyType>
    <PossiblyNullReference>
      <code>plugin</code>
    </PossiblyNullReference>
    <UndefinedInterfaceMethod>
      <code>plugin</code>
    </UndefinedInterfaceMethod>
    <UnevaluatedCode>
      <code><![CDATA[$nav = clone $this->nav2;]]></code>
      <code><![CDATA[$nav->addPage(['label' => 'Invalid', 'uri' => 'http://w.']);]]></code>
      <code><![CDATA[static::fail('A Laminas\View\Exception\InvalidArgumentException was not thrown on invalid <loc />');]]></code>
      <code><![CDATA[try {
            $this->_helper->render($nav);
        } catch (View\Exception\ExceptionInterface $e) {
            $expected = sprintf(
                'Encountered an invalid URL for Sitemap XML: "%s"',
                'http://w.'
            );
            $actual   = $e->getMessage();
            static::assertEquals($expected, $actual);
            return;
        }]]></code>
    </UnevaluatedCode>
  </file>
  <file src="test/Helper/PaginationControlTest.php">
    <InvalidArgument>
      <code>$all</code>
      <code>$paginator</code>
      <code><![CDATA[['partial.phtml', 'test']]]></code>
    </InvalidArgument>
    <NullArgument>
      <code>null</code>
    </NullArgument>
  </file>
  <file src="test/Helper/PartialLoopTest.php">
    <InvalidArgument>
      <code>$o</code>
      <code>$o</code>
      <code>$o</code>
      <code>$o</code>
      <code>$o</code>
      <code>$o</code>
      <code>$o</code>
      <code>$o</code>
      <code>$rIterator</code>
      <code>$rIterator</code>
      <code>$rIterator</code>
      <code>$rIterator</code>
      <code><![CDATA['foo']]></code>
      <code><![CDATA['foo']]></code>
      <code>new stdClass()</code>
      <code>new stdClass()</code>
    </InvalidArgument>
    <MixedArgument>
      <code>$value</code>
      <code>$value</code>
    </MixedArgument>
    <MixedAssignment>
      <code>$key</code>
      <code>$key</code>
      <code>$key</code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
    </MixedAssignment>
    <MixedOperand>
      <code><![CDATA[$item->message]]></code>
      <code><![CDATA[$item->message]]></code>
      <code><![CDATA[$item->objectKey]]></code>
      <code><![CDATA[$item->objectKey]]></code>
      <code>$value</code>
      <code>$value</code>
    </MixedOperand>
    <PossiblyInvalidArgument>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
    </PossiblyInvalidArgument>
    <PossiblyInvalidCast>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
    </PossiblyInvalidCast>
    <PossiblyInvalidMethodCall>
      <code>addPath</code>
      <code>addPath</code>
      <code>addPath</code>
      <code>addPath</code>
      <code>addPath</code>
      <code>addPath</code>
      <code>addPath</code>
      <code>addPath</code>
      <code>addPath</code>
      <code>addPath</code>
      <code>addPath</code>
      <code>addPath</code>
      <code>addPath</code>
      <code>addPath</code>
      <code>addPath</code>
      <code>addPath</code>
      <code>addPath</code>
      <code>addPath</code>
      <code>addPath</code>
      <code>addPath</code>
      <code>addPath</code>
      <code>addPath</code>
      <code>addPath</code>
      <code>addPath</code>
      <code>addPath</code>
      <code>addPath</code>
      <code>addPath</code>
      <code>addPath</code>
    </PossiblyInvalidMethodCall>
    <UndefinedInterfaceMethod>
      <code>addPath</code>
      <code>addPath</code>
      <code>addPath</code>
      <code>addPath</code>
      <code>addPath</code>
      <code>addPath</code>
      <code>addPath</code>
      <code>addPath</code>
      <code>addPath</code>
      <code>addPath</code>
      <code>addPath</code>
      <code>addPath</code>
      <code>addPath</code>
      <code>addPath</code>
      <code>addPath</code>
      <code>addPath</code>
      <code>addPath</code>
      <code>addPath</code>
      <code>addPath</code>
      <code>addPath</code>
      <code>addPath</code>
      <code>addPath</code>
      <code>addPath</code>
      <code>addPath</code>
      <code>addPath</code>
      <code>addPath</code>
      <code>addPath</code>
      <code>addPath</code>
    </UndefinedInterfaceMethod>
    <UndefinedPropertyFetch>
      <code><![CDATA[$item->message]]></code>
      <code><![CDATA[$item->message]]></code>
    </UndefinedPropertyFetch>
    <UnusedVariable>
      <code>$key</code>
      <code>$key</code>
      <code>$key</code>
    </UnusedVariable>
  </file>
  <file src="test/Helper/PartialTest.php">
    <MixedArgument>
      <code>$key</code>
      <code>$key</code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
    </MixedArgument>
    <MixedAssignment>
      <code>$key</code>
      <code>$key</code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
    </MixedAssignment>
    <PossibleRawObjectIteration>
      <code><![CDATA[$model->getVariables()]]></code>
      <code><![CDATA[$model->getVariables()]]></code>
    </PossibleRawObjectIteration>
    <PossiblyInvalidArgument>
      <code>$return</code>
      <code>$return</code>
      <code>$return</code>
      <code>$return</code>
      <code>$return</code>
      <code>$return</code>
      <code>$return</code>
      <code>$return</code>
      <code>$return</code>
    </PossiblyInvalidArgument>
    <PossiblyInvalidCast>
      <code>$return</code>
      <code>$return</code>
      <code>$return</code>
      <code>$return</code>
      <code>$return</code>
      <code>$return</code>
      <code>$return</code>
      <code>$return</code>
      <code>$return</code>
    </PossiblyInvalidCast>
    <PossiblyInvalidMethodCall>
      <code>addPath</code>
      <code>addPath</code>
      <code>addPath</code>
      <code>addPath</code>
      <code>addPath</code>
      <code>addPath</code>
      <code>addPath</code>
    </PossiblyInvalidMethodCall>
    <UndefinedInterfaceMethod>
      <code>addPath</code>
      <code>addPath</code>
      <code>addPath</code>
      <code>addPath</code>
      <code>addPath</code>
      <code>addPath</code>
      <code>addPath</code>
    </UndefinedInterfaceMethod>
    <UndefinedPropertyAssignment>
      <code><![CDATA[$view->vars()->message]]></code>
    </UndefinedPropertyAssignment>
  </file>
  <file src="test/Helper/ServerUrlTest.php">
    <InvalidArgument>
      <code>1337</code>
      <code>new stdClass()</code>
    </InvalidArgument>
  </file>
  <file src="test/Helper/TestAsset/ArrayTranslator.php">
    <InvalidArgument>
      <code><![CDATA[$this->translations]]></code>
    </InvalidArgument>
  </file>
  <file src="test/Helper/TestAsset/IteratorWithToArrayTestContainer.php">
    <MixedAssignment>
      <code>$value</code>
    </MixedAssignment>
  </file>
  <file src="test/Helper/UrlIntegrationTest.php">
    <DeprecatedClass>
      <code><![CDATA[new Config((new RouterConfigProvider())->getDependencyConfig())]]></code>
    </DeprecatedClass>
    <MixedArgument>
      <code>$serviceConfig</code>
      <code>$test</code>
    </MixedArgument>
    <MixedAssignment>
      <code>$router</code>
      <code>$serviceConfig</code>
      <code>$test</code>
      <code>$test</code>
      <code>$urlHelper</code>
      <code>$urlHelper</code>
      <code>$viewHelpers</code>
      <code>$viewHelpers</code>
    </MixedAssignment>
    <MixedFunctionCall>
      <code><![CDATA[$urlHelper('test')]]></code>
      <code><![CDATA[$urlHelper('test', [], ['force_canonical' => true])]]></code>
    </MixedFunctionCall>
    <MixedMethodCall>
      <code>bootstrap</code>
      <code>bootstrap</code>
      <code>get</code>
      <code>get</code>
      <code>setRequestUri</code>
    </MixedMethodCall>
  </file>
  <file src="test/Helper/UrlTest.php">
    <DeprecatedClass>
      <code>Wildcard::class</code>
    </DeprecatedClass>
    <InvalidArgument>
      <code>$it</code>
      <code>$router</code>
      <code>$router</code>
      <code><![CDATA['invalid params']]></code>
      <code>true</code>
      <code>true</code>
    </InvalidArgument>
  </file>
  <file src="test/HelperPluginManagerCompatibilityTest.php">
    <DeprecatedClass>
      <code><![CDATA[new Config([
            'services'  => [
                'config' => [],
            ],
            'factories' => $factories,
        ])]]></code>
    </DeprecatedClass>
    <MixedInferredReturnType>
      <code><![CDATA[Generator<mixed, array{0: mixed, 1: mixed}, mixed, void>]]></code>
    </MixedInferredReturnType>
  </file>
  <file src="test/HelperPluginManagerTest.php">
    <DeprecatedClass>
      <code><![CDATA[new Config(
            [
                'factories' => [
                    'foo' => static fn($container) => $helper,
                ],
            ]
        )]]></code>
      <code><![CDATA[new Config(
            [
                'factories' => [
                    Url::class => static fn($container) => $helper,
                ],
            ]
        )]]></code>
      <code><![CDATA[new Config([
            'services' => [
                'MvcTranslator' => $translator,
            ],
        ])]]></code>
      <code><![CDATA[new Config([
            'services' => [
                'Translator' => $translator,
            ],
        ])]]></code>
      <code><![CDATA[new Config([
            'services' => [
                'Translator' => $translatorB,
            ],
        ])]]></code>
      <code><![CDATA[new Config([
            'services' => [
                TranslatorInterface::class => $translator,
            ],
        ])]]></code>
    </DeprecatedClass>
    <MissingClosureParamType>
      <code>$container</code>
      <code>$container</code>
    </MissingClosureParamType>
    <UnusedClosureParam>
      <code>$container</code>
      <code>$container</code>
    </UnusedClosureParam>
  </file>
  <file src="test/Model/TestAsset/Variable.php">
    <MissingTemplateParam>
      <code>Iterator</code>
    </MissingTemplateParam>
  </file>
  <file src="test/Model/ViewModelTest.php">
    <InvalidArgument>
      <code>$vars</code>
      <code>new stdClass()</code>
      <code>new stdClass()</code>
    </InvalidArgument>
    <MixedArgumentTypeCoercion>
      <code>$options</code>
      <code>$vars</code>
    </MixedArgumentTypeCoercion>
    <PossiblyInvalidArgument>
      <code>$variables</code>
    </PossiblyInvalidArgument>
    <PossiblyInvalidArrayAccess>
      <code><![CDATA[$variables['foo']]]></code>
    </PossiblyInvalidArrayAccess>
  </file>
  <file src="test/PhpRendererTest.php">
    <MixedArgument>
      <code>$content</code>
    </MixedArgument>
    <MixedAssignment>
      <code>$foo</code>
      <code>$return</code>
    </MixedAssignment>
    <PossiblyInvalidArrayAssignment>
      <code><![CDATA[$vars['foo']]]></code>
    </PossiblyInvalidArrayAssignment>
    <UndefinedPropertyFetch>
      <code><![CDATA[$this->renderer->vars()->foo]]></code>
    </UndefinedPropertyFetch>
    <UnusedClosureParam>
      <code>$errno</code>
      <code>$errstr</code>
    </UnusedClosureParam>
  </file>
  <file src="test/Renderer/JsonRendererTest.php">
    <InvalidArgument>
      <code>$model</code>
      <code>$model</code>
      <code>$model</code>
      <code>$model</code>
      <code>$model</code>
      <code>$model</code>
      <code>0</code>
      <code>false</code>
      <code>false</code>
    </InvalidArgument>
    <MixedArgument>
      <code>$model</code>
    </MixedArgument>
  </file>
  <file src="test/Resolver/AggregateResolverTest.php">
    <DocblockTypeContradiction>
      <code>assertNull</code>
    </DocblockTypeContradiction>
  </file>
  <file src="test/Resolver/TemplatePathStackTest.php">
    <DeprecatedConstant>
      <code>TemplatePathStack::FAILURE_NOT_FOUND</code>
      <code>TemplatePathStack::FAILURE_NO_PATHS</code>
    </DeprecatedConstant>
  </file>
  <file src="test/Strategy/FeedStrategyTest.php">
    <MixedAssignment>
      <code>$listener</code>
      <code>$listener</code>
      <code>$priority</code>
      <code>$priority</code>
    </MixedAssignment>
    <PossiblyInvalidMethodCall>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
    </PossiblyInvalidMethodCall>
    <PossiblyUndefinedMethod>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
    </PossiblyUndefinedMethod>
  </file>
  <file src="test/Strategy/JsonStrategyTest.php">
    <MixedArgument>
      <code><![CDATA[$headers->get('content-type')->getFieldValue()]]></code>
      <code><![CDATA[$headers->get('content-type')->getFieldValue()]]></code>
      <code><![CDATA[$headers->get('content-type')->getFieldValue()]]></code>
      <code><![CDATA[$headers->get('content-type')->getFieldValue()]]></code>
      <code><![CDATA[$headers->get('content-type')->getFieldValue()]]></code>
      <code><![CDATA[$headers->get('content-type')->getFieldValue()]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code>$content</code>
      <code>$content</code>
      <code>$content</code>
      <code>$content</code>
      <code>$content</code>
      <code>$content</code>
      <code>$listener</code>
      <code>$listener</code>
      <code>$priority</code>
      <code>$priority</code>
    </MixedAssignment>
    <PossiblyInvalidMethodCall>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>getFieldValue</code>
      <code>getFieldValue</code>
      <code>getFieldValue</code>
      <code>getFieldValue</code>
      <code>getFieldValue</code>
      <code>getFieldValue</code>
      <code>getFieldValue</code>
    </PossiblyInvalidMethodCall>
    <PossiblyUndefinedMethod>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>getFieldValue</code>
      <code>getFieldValue</code>
      <code>getFieldValue</code>
      <code>getFieldValue</code>
      <code>getFieldValue</code>
      <code>getFieldValue</code>
      <code>getFieldValue</code>
    </PossiblyUndefinedMethod>
    <UnusedMethodCall>
      <code>getContent</code>
    </UnusedMethodCall>
  </file>
  <file src="test/Strategy/PhpRendererStrategyTest.php">
    <InvalidArgument>
      <code>$e</code>
      <code>$event</code>
      <code>$event</code>
      <code>$event</code>
    </InvalidArgument>
    <MixedAssignment>
      <code>$content</code>
      <code>$content</code>
      <code>$content</code>
      <code>$listener</code>
      <code>$listener</code>
      <code>$priority</code>
      <code>$priority</code>
    </MixedAssignment>
  </file>
  <file src="test/ViewTest.php">
    <MixedArgument>
      <code><![CDATA[$result->content]]></code>
      <code><![CDATA[$this->result->content]]></code>
    </MixedArgument>
    <NullArgument>
      <code>null</code>
    </NullArgument>
  </file>
</files>
